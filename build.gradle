plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

version = project.mod_version
group = project.maven_group

repositories {

}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

shadowJar {
    minimize()
    classifier("shadow")
    configurations = [project.configurations.shadow]
    from sourceSets.main.output
}

remapJar {
    from zipTree(shadowJar.archiveFile) dependsOn shadowJar
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(targetJavaVersion)
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}
